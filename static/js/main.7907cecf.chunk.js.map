{"version":3,"sources":["components/main/main.tsx","components/game/game.tsx","logic/blocks-logic.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Main","fetch","then","response","json","data","Game","useState","value","active","gameGrid","setGameGrid","onKeyPressed","useCallback","e","oldGrid","_","grid","row","key","newWholeArray","k","i","length","j","console","log","blockWithValues","blocksWithoutValues","push","newArray","moveWholeBlocksToRight","checkIfMoved","newGrid","moved","checkIfBlockMoved","withRandom","addRandomBlocks","useEffect","copiedGrid","arrayOfEmptyBlocks","index","numberOfEmptyBlocks","randomEmptyBlock","Math","floor","random","document","addEventListener","removeEventListener","onClick","style","border","width","height","map","Row","el","Block","uuidv4","styled","div","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7907cecf.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n// import ReactResizeDetector from 'react-resize-detector';\r\n\r\ntype Props = {};\r\n\r\nexport const Main: FC<Props> = () => {\r\n  const tasks = fetch(\"http://localhost:5000/test\")\r\n    .then((response) => response.json())\r\n    .then((data) => null);\r\n  return (\r\n    <>\r\n      <h1>Main Component</h1>\r\n    </>\r\n  );\r\n};\r\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\r\nimport {\r\n  moveWholeBlocksToRight,\r\n  checkIfBlockMoved,\r\n} from \"../../logic/blocks-logic\";\r\nimport styled from \"styled-components/macro\";\r\nimport * as _ from \"lodash\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\ntype Props = {};\r\n\r\nexport const Game: FC<Props> = () => {\r\n  const [gameGrid, setGameGrid] = useState([\r\n    [\r\n      { value: 0, active: \"old\" },\r\n      { value: 0, active: \"old\" },\r\n      { value: 0, active: \"old\" },\r\n      { value: 0, active: \"old\" },\r\n    ],\r\n    [\r\n      { value: 2, active: \"old\" },\r\n      { value: 2, active: \"old\" },\r\n      { value: 2, active: \"old\" },\r\n      { value: 2, active: \"old\" },\r\n    ],\r\n    [\r\n      { value: 2, active: \"old\" },\r\n      { value: 0, active: \"old\" },\r\n      { value: 4, active: \"old\" },\r\n      { value: 0, active: \"old\" },\r\n    ],\r\n    [\r\n      { value: 2, active: \"old\" },\r\n      { value: 2, active: \"old\" },\r\n      { value: 2, active: \"old\" },\r\n      { value: 2, active: \"old\" },\r\n    ],\r\n  ]);\r\n\r\n  const onKeyPressed = useCallback(\r\n    (e) => {\r\n      const oldGrid = _.cloneDeep(gameGrid);\r\n      const copiedGrid = _.cloneDeep(gameGrid);\r\n      const grid = moveWholeBlocksToRight(copiedGrid, e.key);\r\n      const checkIfMoved = checkIfBlockMoved(oldGrid, grid);\r\n      const withRandom = checkIfMoved && addRandomBlocks(grid);\r\n      console.log(withRandom);\r\n      console.log(checkIfMoved);\r\n      checkIfMoved && setGameGrid(withRandom);\r\n    },\r\n    [gameGrid]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const copiedGrid = _.cloneDeep(gameGrid);\r\n    const withRandom = addRandomBlocks(copiedGrid);\r\n    setGameGrid(withRandom);\r\n  }, []);\r\n\r\n  const addRandomBlocks = (grid: any) => {\r\n    console.log(\"%c%s\", \"color: #aa00ff\", \"addRandom :\");\r\n    const arrayOfEmptyBlocks = [];\r\n    for (let i = 0; i < 4; i++) {\r\n      for (let j = 0; j < 4; j++) {\r\n        if (grid[i][j].value === 0) {\r\n          arrayOfEmptyBlocks.push({\r\n            row: i,\r\n            index: j,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    const numberOfEmptyBlocks = arrayOfEmptyBlocks.length;\r\n    const randomNumber = Math.floor(Math.random() * numberOfEmptyBlocks);\r\n    const randomEmptyBlock = arrayOfEmptyBlocks[randomNumber];\r\n    grid[randomEmptyBlock.row][randomEmptyBlock.index] = {\r\n      value: 2,\r\n      active: \"new\",\r\n    };\r\n\r\n    console.log(randomEmptyBlock);\r\n    return grid;\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", onKeyPressed);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyPressed);\r\n    };\r\n  }, [onKeyPressed]);\r\n\r\n  return (\r\n    <>\r\n      <h1 onClick={() => console.log(gameGrid)}>Game Component</h1>\r\n      <div style={{ border: \"1px solid red\", width: \"500px\", height: \"500px\" }}>\r\n        {gameGrid.map((row, i) => {\r\n          return (\r\n            <Row key={uuidv4()}>\r\n              {row.map((el, i) => {\r\n                return (\r\n                  <Block key={uuidv4()} active={el.active}>\r\n                    {el.value}\r\n                  </Block>\r\n                );\r\n              })}\r\n            </Row>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\ninterface BlockInterface {\r\n  active: string;\r\n}\r\n\r\nconst Block = styled.div<BlockInterface>`\r\n  color: black;\r\n  box-sizing: border-box;\r\n  width: 125px;\r\n  height: 125px;\r\n  border: 1px solid green;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 45px;\r\n\r\n  ${({ active }) =>\r\n    active === \"combined\" &&\r\n    `\r\n    background-color:green;\r\n  `}\r\n  ${({ active }) =>\r\n    active === \"new\" &&\r\n    `\r\n    background-color:blue;\r\n  `}\r\n`;\r\n","\r\n\r\n\r\nexport const moveWholeBlocksToRight=(row:any,key:string)=>{\r\n  let lol=0\r\n   const newWholeArray=[]\r\nfor(let k=0;k<4;k++){\r\n\r\n   for (let i = row.length - 1; i >= 0; i--) {\r\n    row[k][i].active=\"old\"\r\n      for (let j = i - 1; j >= 0; j--) {\r\n        \r\n        console.log(\"k :\"+k+\"i :\"+i)\r\n        lol++\r\n        if (row[k][i].value !== 0) {\r\n          \r\n          if (row[k][j].value > 0 && row[k][j].value !== row[k][i].value) {\r\n            break;\r\n          } else if (row[k][i].value === row[k][j].value) {\r\n            row[k][i].value = row[k][i].value + row[k][j].value;\r\n            row[k][i].active=\"combined\"\r\n            row[k][j].value = 0;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n      const blockWithValues: any[] = [];\r\n      const blocksWithoutValues: any[] = [];\r\n      for (let i = 0; i < row.length; i++) {\r\n        if (row[k][i].value > 0) {\r\n          blockWithValues.push(row[k][i]);\r\n        } else {\r\n          blocksWithoutValues.push(row[k][i]);\r\n        }\r\n      }\r\n      const newArray = [];\r\n      newArray.push(...blocksWithoutValues, ...blockWithValues);\r\n      newWholeArray.push(newArray)\r\n}\r\n\r\n  return newWholeArray\r\n}\r\n\r\n\r\nexport const checkIfBlockMoved = (oldGrid: any, newGrid: any) => {\r\n  let moved = false;\r\n  for (let i = 0; i < 4; i++) {\r\n    for (let j = 0; j < 4; j++) {\r\n      if (oldGrid[i][j].value !== newGrid[i][j].value) {\r\n        moved = true;\r\n      }\r\n    }\r\n  }\r\n  return moved;\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Main } from \"./components/main\";\nimport { Game } from \"./components/game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}